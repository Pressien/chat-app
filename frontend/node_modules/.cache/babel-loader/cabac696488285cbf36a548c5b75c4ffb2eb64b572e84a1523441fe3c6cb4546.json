{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prath\\\\Desktop\\\\chat-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\nimport ChatList from \"./components/ChatList\";\nimport ChatWindow from \"./components/ChatWindow\";\nimport { withAuth } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  var _user$username, _user$username$;\n  const [user, setUser] = useState(() => {\n    try {\n      return JSON.parse(localStorage.getItem(\"chat_user\")) || null;\n    } catch {\n      return null;\n    }\n  });\n  const [chats, setChats] = useState([]);\n  const [activeId, setActiveId] = useState(null);\n  const [loadingChats, setLoadingChats] = useState(false);\n  const api = useMemo(() => user ? withAuth(user.token) : null, [user]);\n  useEffect(() => {\n    if (!user) return;\n    let mounted = true;\n    setLoadingChats(true);\n    api.getChats().then(list => {\n      if (!mounted) return;\n      const normalized = list.map(c => ({\n        id: c.id,\n        name: c.name,\n        participants: c.participants || [],\n        avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(c.name)}&background=8a57ff&color=fff`,\n        lastMessage: c.lastMessage,\n        lastTime: c.lastTime\n      }));\n      setChats(normalized);\n      if (!activeId && normalized.length) setActiveId(normalized[0].id);\n    }).catch(console.error).finally(() => setLoadingChats(false));\n    return () => mounted = false;\n  }, [user]); // eslint-disable-line\n\n  const handleLogin = userObj => {\n    setUser(userObj);\n    localStorage.setItem(\"chat_user\", JSON.stringify(userObj));\n  };\n  const handleLogout = () => {\n    setUser(null);\n    localStorage.removeItem(\"chat_user\");\n    setChats([]);\n    setActiveId(null);\n  };\n  if (!user) return /*#__PURE__*/_jsxDEV(Login, {\n    onLogin: handleLogin\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 21\n  }, this);\n  const activeChat = chats.find(c => c.id === activeId) || null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shell\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brand\",\n        children: \"Chat App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"me\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"me__avatar\",\n          children: (user === null || user === void 0 ? void 0 : (_user$username = user.username) === null || _user$username === void 0 ? void 0 : (_user$username$ = _user$username[0]) === null || _user$username$ === void 0 ? void 0 : _user$username$.toUpperCase()) || \"U\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"me__name\",\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sign-out\",\n          onClick: handleLogout,\n          children: \"Sign out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatList, {\n        chats: chats,\n        activeId: activeId,\n        onSelect: setActiveId,\n        loading: loadingChats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: activeChat ? /*#__PURE__*/_jsxDEV(ChatWindow, {\n        chat: activeChat,\n        user: user,\n        api: api,\n        refreshChats: () => {\n          api.getChats().then(list => {\n            const normalized = list.map(c => ({\n              id: c.id,\n              name: c.name,\n              participants: c.participants || [],\n              avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(c.name)}&background=8a57ff&color=fff`,\n              lastMessage: c.lastMessage,\n              lastTime: c.lastTime\n            }));\n            setChats(normalized);\n          }).catch(console.error);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeholder\",\n        children: \"Select a chat to start messaging\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bbGis43mdwuFQTfI5bJrm3vx7c4=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","Login","ChatList","ChatWindow","withAuth","jsxDEV","_jsxDEV","App","_s","_user$username","_user$username$","user","setUser","JSON","parse","localStorage","getItem","chats","setChats","activeId","setActiveId","loadingChats","setLoadingChats","api","token","mounted","getChats","then","list","normalized","map","c","id","name","participants","avatar","encodeURIComponent","lastMessage","lastTime","length","catch","console","error","finally","handleLogin","userObj","setItem","stringify","handleLogout","removeItem","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","activeChat","find","className","children","username","toUpperCase","onClick","onSelect","loading","chat","refreshChats","_c","$RefreshReg$"],"sources":["C:/Users/prath/Desktop/chat-app/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Login from \"./components/Login\";\r\nimport ChatList from \"./components/ChatList\";\r\nimport ChatWindow from \"./components/ChatWindow\";\r\nimport { withAuth } from \"./api\";\r\n\r\nexport default function App() {\r\n  const [user, setUser] = useState(() => {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(\"chat_user\")) || null;\r\n    } catch {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const [chats, setChats] = useState([]);\r\n  const [activeId, setActiveId] = useState(null);\r\n  const [loadingChats, setLoadingChats] = useState(false);\r\n\r\n  const api = useMemo(() => (user ? withAuth(user.token) : null), [user]);\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    let mounted = true;\r\n    setLoadingChats(true);\r\n    api.getChats()\r\n      .then(list => {\r\n        if (!mounted) return;\r\n        const normalized = list.map(c => ({\r\n          id: c.id,\r\n          name: c.name,\r\n          participants: c.participants || [],\r\n          avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(c.name)}&background=8a57ff&color=fff`,\r\n          lastMessage: c.lastMessage,\r\n          lastTime: c.lastTime\r\n        }));\r\n        setChats(normalized);\r\n        if (!activeId && normalized.length) setActiveId(normalized[0].id);\r\n      })\r\n      .catch(console.error)\r\n      .finally(() => setLoadingChats(false));\r\n    return () => (mounted = false);\r\n  }, [user]); // eslint-disable-line\r\n\r\n  const handleLogin = (userObj) => {\r\n    setUser(userObj);\r\n    localStorage.setItem(\"chat_user\", JSON.stringify(userObj));\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem(\"chat_user\");\r\n    setChats([]);\r\n    setActiveId(null);\r\n  };\r\n\r\n  if (!user) return <Login onLogin={handleLogin} />;\r\n\r\n  const activeChat = chats.find(c => c.id === activeId) || null;\r\n\r\n  return (\r\n    <div className=\"shell\">\r\n      <aside className=\"sidebar\">\r\n        <div className=\"brand\">Chat App</div>\r\n        <div className=\"me\">\r\n          <div className=\"me__avatar\">{user?.username?.[0]?.toUpperCase() || \"U\"}</div>\r\n          <div className=\"me__name\">{user.username}</div>\r\n          <button className=\"sign-out\" onClick={handleLogout}>Sign out</button>\r\n        </div>\r\n\r\n        <ChatList chats={chats} activeId={activeId} onSelect={setActiveId} loading={loadingChats} />\r\n      </aside>\r\n\r\n      <main className=\"main\">\r\n        {activeChat ? (\r\n          <ChatWindow\r\n            chat={activeChat}\r\n            user={user}\r\n            api={api}\r\n            refreshChats={() => {\r\n              api.getChats().then(list => {\r\n                const normalized = list.map(c => ({\r\n                  id: c.id,\r\n                  name: c.name,\r\n                  participants: c.participants || [],\r\n                  avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(c.name)}&background=8a57ff&color=fff`,\r\n                  lastMessage: c.lastMessage,\r\n                  lastTime: c.lastTime\r\n                }));\r\n                setChats(normalized);\r\n              }).catch(console.error);\r\n            }}\r\n          />\r\n        ) : (\r\n          <div className=\"placeholder\">Select a chat to start messaging</div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}